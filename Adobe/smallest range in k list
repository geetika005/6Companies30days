//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;
#define N 1000


// } Driver Code Ends
// you are required to complete this function 
// function should print the required range
 
class Solution{
    public:
   class node{
    public: 

        int data;

        int row;

        int col;

        

        node(int d, int r, int c)

        {

            this -> data = d;

            this -> row = r;

            this -> col = c;

        }

};

 

class cmp{

    

    public:

    

    bool operator()(node* a, node* b){

        return a -> data > b -> data;

    }

};

 

 

    pair<int,int> findSmallestRange(int KSortedArray[][N], int n, int k)

    {

        int mini = INT_MAX;

        int maxi = INT_MIN;

        

        priority_queue<node*, vector<node*>, cmp> pq;

        

        

        for(int i = 0; i < k; i++)

        {

            int elem = KSortedArray[i][0];

            

            mini = min(mini, elem);

            maxi = max(maxi, elem);

            pq.push(new node(elem, i, 0)); 

            

        }

        

        int start_index = mini;

        int end_index = maxi;

        

        while(!pq.empty())

        {

            node* temp = pq.top();

            pq.pop();

            

            mini = temp -> data;

            

            if(maxi - mini < end_index - start_index)

            {

                start_index = mini;

                end_index = maxi;

            }

            

            if(temp -> col + 1 < n)

            {

                maxi = max(maxi, KSortedArray[temp -> row][temp -> col + 1]);

                pq.push(new node(KSortedArray[temp -> row][temp -> col + 1], temp -> row, temp -> col + 1));

            }

            

            else

                break;

        }

        return {start_index, end_index};

    }
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n, k;
        cin>>n>>k;
        int arr[N][N];
        pair<int,int> rangee;
        for(int i=0; i<k; i++)
            for(int j=0; j<n; j++)
                cin>>arr[i][j];
        Solution obj;
	    rangee = obj.findSmallestRange(arr, n, k);
	    cout<<rangee.first<<" "<<rangee.second<<"\n";
    }   
	return 0;
}


// } Driver Code Ends
