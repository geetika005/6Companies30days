//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        // Your code here
        vector<int> ans;
        if(n==1)
        {
            if(s==arr[0]){
        ans.push_back(1);
                ans.push_back(1);
            }
            else
        ans.push_back(-1);
        return ans;
        }
        int a=0,e=0; long long sum=0;
       
    while(a<n&&a<=e&&e<=n){
        if(s!=0&&sum==s){
            ans.push_back(a+1);
            ans.push_back(e);
            return ans;
        }
        else if(sum<s&&e<n){sum+=arr[e];
        e++;}
        else
        {   sum-=arr[a];
            a++;
        }
    }
    if(s!=0&&sum==s)
    {
      ans.push_back(a+1);
            ans.push_back(e);
        return ans;
    }
    
    if(arr[n-1]==s)
    {
      ans.push_back(n);
            ans.push_back(n);
        return ans;
    }
    ans.push_back(-1);
    return ans;
    }
};

//{ Driver Code Starts.

int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        long long s;
        cin>>n>>s;
        vector<int>arr(n);
        // int arr[n];
        const int mx = 1e9;
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        Solution ob;
        vector<int>res;
        res = ob.subarraySum(arr, n, s);
        
        for(int i = 0;i<res.size();i++)
            cout<<res[i]<<" ";
        cout<<endl;
        
    }
	return 0;
}
// } Driver Code Ends
